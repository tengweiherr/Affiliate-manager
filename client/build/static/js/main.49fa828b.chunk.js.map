{"version":3,"sources":["api/index.js","store/slices/downlineSlice.js","components/Calculator/Calculator.js","components/Home/Home.js","store/slices/authSlice.js","components/Login/Login.js","components/Auth/Auth.js","components/Downlines/Downlines.js","components/Information/Information.js","App.js","store/index.js","index.js"],"names":["API_URL","process","fetchDownlines","referral","fetch","method","headers","then","data","json","authSlice","createSlice","name","initialState","reducers","getDownlines","state","action","payload","createDownline","updateDownline","map","downline","_id","deleteDownline","filter","actions","Calculator","downlines","useSelector","useState","filteredDownlines","setFilteredDownlines","setReferral","decimal","setDecimal","currency","setCurrency","rate","setRate","payout","setPayout","error","setError","dawson","setDawson","khoo","setKhoo","weiherr","setWeiherr","xiaofei","setXiaofei","jasper","setJasper","self","setSelf","cycle_profit","form","setForm","isCalculated","setIsCalculated","commission","setCommission","main_acc_profit","shared_acc_profit","shared_acc_commission","dawson_commission","khoo_commission","weiherr_commission","xiaofei_commission","jasper_commission","result","setResult","show","setShow","editDownline","setEditDownline","editedDownline","setEditedDownline","handleClose","EditIcon","xmlns","width","height","fill","className","viewBox","d","useEffect","results","index","checked","array","length","catch","err","console","log","calculateCommission","parseFloat","personalTotalCommission","_commission","referralFee","totalCommission","parseInt","attachment","calculateYearDifference","join_date","clearResult","calculateSharedAccProfit","totalAttachment","calculateResult","temp","date","date1","Date","getTime","Container","style","backgroundColor","Form","Row","Col","Group","controlId","Label","display","flexDirection","alignItems","Control","type","min","step","placeholder","marginRight","onChange","event","isNaN","target","value","prevState","onKeyUp","Button","variant","disabled","onClick","Check","inline","label","id","defaultChecked","e","left","InputGroup","sm","Table","hover","responsive","toFixed","Dropdown","Toggle","charAt","toUpperCase","slice","Menu","Item","href","onSelect","tfxi_id","split","find","x","referral_fee","handleChecked","Modal","onHide","Header","Title","Body","readOnly","defaultValue","fund","Footer","previousCommission","current","Spinner","animation","role","Home","history","useHistory","JSON","parse","localStorage","getItem","user","useDispatch","push","login","setItem","stringify","logout","clear","Login","dispatch","location","useLocation","setUser","token","size","Auth","password","loginData","setLoginData","showPassword","setShowPassword","onSubmit","preventDefault","body","res","jsonRes","status","alert","message","FormControl","prevShowPassword","TrashIcon","Downlines","selectedData","setSelectedData","showConfirm","setShowConfirm","setAction","handleShow","handleCloseConfirm","downlineSlice","md","xs","total","calculateTotal","updateSelectedData","backdrop","keyboard","test","required","as","window","reload","createNewDownline","Information","App","auth","atob","parseJwt","exp","now","Navbar","collapseOnSelect","expand","bg","Brand","Collapse","Nav","Link","fluid","path","exact","component","render","to","combinedReducer","combineReducers","downlineReducer","authReducer","configureStore","reducer","devTools","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.49fa828b.chunk.js","sourcesContent":["// import axios from 'axios';\n// const API_URL = process.env.REACT_APP_API_URL;\n// const API = axios.create({ baseURL: API_URL });\n\n// API.interceptors.request.use((req) => {\n\n//     if(localStorage.getItem('profile')){\n//         req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n//     }\n\n//     return req;\n// })\n\n// export const fetchDownline = () => API.get('/downline');\n// export const createDownline = (newDownline) => API.post('/downline', newDownline);\n// export const updateDownline = (id, updatedDownline) => API.patch(`/downline/${id}`, updatedDownline);\n// export const deleteDownline = (id) => API.delete(`/downline/${id}`);\n\n// export const fetchCycle = () => API.get('/cycle');\n// export const createCycle = (newCycle) => API.post('/cycle', newCycle);\n// export const updateCycle = (id, updatedCycle) => API.patch(`/cycle/${id}`, updatedCycle);\n// export const deleteCycle = (id) => API.delete(`/cycle/${id}`);\n\n// export const login = ( loginData ) => API.post('/user/login', loginData);\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst login = (loginData) => {\n  return fetch(API_URL + 'user/login/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(loginData),\n  }).then(async res => {\n    const jsonRes = await res.json()\n    if(res.status === 200) return jsonRes;\n    else alert(jsonRes.message);\n  })\n}\n\nconst fetchDownlines = (referral) => {\n  return fetch(API_URL + 'downline/' + referral, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  }).then(data => data.json())\n}\n\nconst createNewDownline = (downline) => {\n  return fetch(API_URL + 'downline/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(downline),\n  }).then(async res=>{\n    try {\n      const jsonRes = await res.json();\n      if (res.status !== 201) {\n          console.log(jsonRes.message);\n      } else {\n        console.log(jsonRes.message);\n        window.location.reload();\n      }\n      } catch (err) {\n          console.log(err);\n      };\n  })\n}\n\nconst updateDownline = (downline) => {\n  return fetch(API_URL + 'downline/' + downline._id, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(downline),\n  }).then(async res=>{\n    try {\n      const jsonRes = await res.json();\n      if (res.status !== 200) {\n          console.log(jsonRes.message);\n      } else {\n        console.log(jsonRes.message);\n        window.location.reload();\n      }\n      } catch (err) {\n          console.log(err);\n      };\n  })\n}\n\nconst deleteDownline = (downline) => {\n  console.log(downline)\n  return fetch(API_URL + 'downline/' + downline._id, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  }).then(async res=>{\n    try {\n      const jsonRes = await res.json();\n      if (res.status !== 200) {\n          console.log(jsonRes.message);\n      } else {\n        console.log(jsonRes.message);\n        window.location.reload();\n      }\n      } catch (err) {\n          console.log(err);\n      };\n  })\n}\n\nexport { fetchDownlines, createNewDownline, updateDownline, deleteDownline, login }","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const authSlice = createSlice({\n  name: \"downline\",\n  initialState: [],\n  reducers: {\n\n    getDownlines: (state, action) => {\n        return action.payload\n    },\n\n    createDownline: (state, action) => {\n       return [...state, action.payload];\n    },\n\n    updateDownline: (state, action) => {\n       return state.map((downline) => downline._id === action.payload._id ? action.payload : downline);\n    },\n\n    deleteDownline: (state, action) => {\n        return state.filter((downline) => downline._id !== action.payload);\n    }\n\n  },\n});\n\nexport const { getDownlines, createDownline, updateDownline, deleteDownline } = authSlice.actions;\n\n// export const getObject = (state: AppState) => state.object;\n\nexport default authSlice.reducer;","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Col, Container, Dropdown, Form, InputGroup, Modal, Row, Spinner, Table } from 'react-bootstrap';\nimport './Calculator.scss';\nimport { fetchDownlines, createNewDownline, updateDownline, deleteDownline } from '../../api';\nimport * as downlineSlice from '../../store/slices/downlineSlice';\n\nexport const Calculator = () => {\n\n    //data\n    const downlines = useSelector(state => state.downline);\n    const [filteredDownlines, setFilteredDownlines] = useState();\n    const [referral, setReferral] = useState('');\n\n    //customizable\n    const [decimal, setDecimal] = useState(2);\n    const [currency, setCurrency] = useState(\"usd\");\n    const [rate, setRate] = useState(1);\n    const [payout, setPayout] = useState(40);\n    const [error, setError] = useState(\"\");\n\n    //referral\n    const [dawson, setDawson] = useState([]);\n    const [khoo, setKhoo] = useState([]);\n    const [weiherr, setWeiherr] = useState([]);\n    const [xiaofei, setXiaofei] = useState([]);\n    const [jasper, setJasper] = useState([]);\n    const [self, setSelf] = useState([]);\n\n    //calculation\n    const [form, setForm] = useState({cycle_profit:0});\n    const [isCalculated, setIsCalculated] = useState(false);\n    const [commission, setCommission] = useState(0);\n    const [result, setResult] = useState({\n        main_acc_profit: 0,\n        shared_acc_profit: 0,\n        shared_acc_commission: 0,\n        dawson_commission: 0,\n        khoo_commission: 0,\n        weiherr_commission: 0,\n        xiaofei_commission: 0,\n        jasper_commission: 0\n    });\n\n    //modal\n    const [show, setShow] = useState(false);\n    const [editDownline, setEditDownline] = useState(null);\n    const [editedDownline, setEditedDownline] = useState([]);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const EditIcon = () => {\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n              <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n              <path d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n          </svg>\n        );\n      }\n\n    useEffect(() => {\n      \n        fetchDownlines(referral)\n            .then(results =>{\n                setFilteredDownlines(results);\n\n                for (let index = 0; index < results.length; index++) {\n\n                    results[index].checked = true;\n                    \n                    switch (results[index].referral) {\n                        case 'self':\n                            setSelf((array) =>[...array, results[index]]);\n                            break;\n                        case 'dawson':\n                            setDawson((array) =>[...array,results[index]]);\n                            break;\n                        case 'khoo':\n                            setKhoo((array) =>[...array,results[index]]);\n                            break;\n                        case 'weiherr':\n                            setWeiherr((array) =>[...array,results[index]]);\n                            break;\n                        case 'xiaofei':\n                            setXiaofei((array) =>[...array,results[index]]);\n                            break;\n                        case 'jasper':\n                            setJasper((array) =>[...array,results[index]]);\n                            break;                       \n                        default:\n                            break;\n                    }\n                }\n            })\n            .catch(err=>{\n                console.log(err);\n            })\n    \n    },[])\n\n    useEffect(() => {\n      \n        switch (referral) {\n            case \"\":\n                setFilteredDownlines(downlines);\n                break;\n            case \"self\":\n                setFilteredDownlines(self);\n                break;\n            case \"dawson\":\n                setFilteredDownlines(dawson);\n                break;\n            case \"khoo\":\n                setFilteredDownlines(khoo);\n                break;\n            case \"weiherr\":\n                setFilteredDownlines(weiherr);\n                break;\n            case \"xiaofei\":\n                setFilteredDownlines(xiaofei);\n                break;   \n            case \"jasper\":\n                setFilteredDownlines(jasper);\n                break;       \n            default:\n                break;\n        }\n\n    }, [referral])\n    \n\n    const calculateCommission = () => {\n        const result = (parseFloat(form.cycle_profit)*3/6*(payout/100));\n        return result;\n    }\n    \n    const personalTotalCommission = (referral,_commission) => {\n\n        switch (referral) {\n            case \"dawson\":\n                var referralFee = 0;\n                var totalCommission = 0;\n                for (let index = 0; index < dawson.length; index++) {\n                    if(dawson[index].checked === true){\n                        totalCommission += parseFloat(parseInt(dawson[index].attachment/1000)*_commission);\n\n                        if(calculateYearDifference(dawson[index].join_date) < 1)\n                        referralFee += parseFloat(parseInt(dawson[index].attachment/1000)*(50/12));\n                    }\n                }\n                return parseFloat(referralFee + totalCommission);\n            case \"khoo\":\n                var referralFee = 0;\n                var totalCommission = 0;\n                for (let index = 0; index < khoo.length; index++) {\n\n                    if(khoo[index].checked === true){\n                        totalCommission += parseFloat(parseInt(khoo[index].attachment/1000)*_commission);\n\n                        if(calculateYearDifference(khoo[index].join_date) < 1)\n                        referralFee += parseFloat(parseInt(khoo[index].attachment/1000)*(50/12));\n                    }\n                }\n                return parseFloat(referralFee + totalCommission);\n            case \"weiherr\":\n                var referralFee = 0;\n                var totalCommission = 0;\n                for (let index = 0; index < weiherr.length; index++) {\n                    if(weiherr[index].checked === true)\n                    {\n                        totalCommission += parseFloat(parseInt(weiherr[index].attachment/1000)*_commission);\n\n                        if(calculateYearDifference(weiherr[index].join_date) < 1)\n                        referralFee += parseFloat(parseInt(weiherr[index].attachment/1000)*(50/12));\n                    }\n                }\n                return parseFloat(referralFee + totalCommission);\n            case \"xiaofei\":\n                var referralFee = 0;\n                var totalCommission = 0;\n                for (let index = 0; index < xiaofei.length; index++) {\n\n                    if(xiaofei[index].checked === true){\n                        totalCommission += parseFloat(parseInt(xiaofei[index].attachment/1000)*_commission);\n\n                        if(calculateYearDifference(xiaofei[index].join_date) < 1)\n                        referralFee += parseFloat(parseInt(xiaofei[index].attachment/1000)*(50/12));\n                    }\n                }\n                return parseFloat(referralFee + totalCommission);   \n            case \"jasper\":\n                var referralFee = 0;\n                var totalCommission = 0;\n                for (let index = 0; index < jasper.length; index++) {\n\n                    if(jasper[index].checked === true){\n                        totalCommission += parseFloat(parseInt(jasper[index].attachment/1000)*_commission);\n\n                        if(calculateYearDifference(jasper[index].join_date) < 1)\n                        referralFee += parseFloat(parseInt(jasper[index].attachment/1000)*(50/12));\n                    }\n                }\n                return parseFloat(referralFee + totalCommission);\n            case \"self\":\n                var referralFee = 0;\n                var totalCommission = 0;\n                for (let index = 0; index < self.length; index++) {\n\n                    if(self[index].checked === true){\n                        totalCommission += parseFloat(parseInt(self[index].attachment/1000)*_commission);\n\n                        if(calculateYearDifference(self[index].join_date) < 1)\n                        referralFee += parseFloat(parseInt(self[index].attachment/1000)*(50/12));\n                    }\n                }\n                return parseFloat(referralFee + totalCommission);              \n            default:\n                break;\n        }\n    \n    }    \n\nconst onSubmit = () => {\n\n    if(form.cycle_profit !== 0){\n        clearResult();\n        setCommission(calculateCommission());\n        calculateResult();\n        setIsCalculated(true);\n    }\n}\n\nconst clearResult = () => {\n    var temp = {\n        main_acc_profit: 0,\n        shared_acc_profit: 0,\n        shared_acc_commission: 0,\n        dawson_commission: 0,\n        khoo_commission: 0,\n        weiherr_commission: 0,\n        xiaofei_commission: 0,\n        jasper_commission: 0\n      } \n    setResult(temp);\n}\n\nconst calculateSharedAccProfit = (cycle_profit) => {\n  var totalAttachment = 0;\n  for (let index = 0; index < self.length; index++) {\n      if(self[index].checked === true)\n      totalAttachment += self[index].attachment;\n  }\n  return cycle_profit * (totalAttachment/1000)\n}\n\nconst calculateResult = () => {\n    var temp = {\n        main_acc_profit: parseFloat(form.cycle_profit)*3,\n        shared_acc_profit: parseFloat(calculateSharedAccProfit(form.cycle_profit)),\n        shared_acc_commission: personalTotalCommission(\"self\",calculateCommission()),\n        dawson_commission: personalTotalCommission(\"dawson\",calculateCommission()),\n        khoo_commission: personalTotalCommission(\"khoo\",calculateCommission()),\n        weiherr_commission: personalTotalCommission(\"weiherr\",calculateCommission()),\n        xiaofei_commission: personalTotalCommission(\"xiaofei\",calculateCommission()),\n        jasper_commission: personalTotalCommission(\"jasper\",calculateCommission())\n      } \n    setResult(temp);\n}\n\nconst calculateYearDifference = (date) => {\n\n    // To set two dates to two variables\n    var date1 = new Date(date);\n    var date2 = new Date();\n    \n    // To calculate the time difference of two dates\n    var Difference_In_Time = date2.getTime() - date1.getTime();\n    \n    // To calculate the no. of days between two dates\n    var Difference_In_Years = Difference_In_Time / (1000 * 3600 * 24 * 365);\n\n    return Difference_In_Years;\n\n}\n\nconst handleChecked = (e,downline) => {\n\n    switch (downline.referral) {\n        case 'self':\n            self.find(x => x._id === downline._id).checked = e.target.checked;\n            break;\n        case 'dawson':\n            dawson.find(x => x._id === downline._id).checked = e.target.checked;\n            break;\n        case 'khoo':\n            khoo.find(x => x._id === downline._id).checked = e.target.checked;\n            break;\n        case 'weiherr':\n            weiherr.find(x => x._id === downline._id).checked = e.target.checked;\n            break;\n        case 'xiaofei':\n            xiaofei.find(x => x._id === downline._id).checked = e.target.checked;\n            break;\n        case 'jasper':\n            jasper.find(x => x._id === downline._id).checked = e.target.checked;\n            break;                       \n        default:\n            break;\n    }\n\n    calculateResult();\n\n}\n\nconst handleSubmit = () => {\n    // setEditDownline({...editDownline, commission:e.target.value});\n    var previousCommission = (parseFloat(commission*editDownline.attachment/1000)*(rate)).toFixed(decimal);\n    // var previousReferral = (calculateYearDifference(editDownline.join_date) < 1 ? (parseFloat((parseInt(editDownline.referral_fee)/12)*editDownline.attachment/1000)*(rate)).toFixed(decimal) : 0);\n    if(editedDownline.find(x=>x._id === editDownline._id)?.commission){\n        previousCommission = editedDownline.find(x=>x._id === editDownline._id).commission;\n    }    \n    // if(editedDownline.find(x=>x._id === editDownline._id)?.commission){\n    //     previousReferral = editedDownline.find(x=>x._id === editDownline._id).new_referral_fee;\n    // }    \n\n    switch (editDownline.referral) {\n        case 'self':\n            setResult({...result, shared_acc_commission:(result.shared_acc_commission - previousCommission + (editDownline.commission ? parseFloat(editDownline.commission) : previousCommission) )});\n            break;\n        case 'dawson':         \n            // setResult({...result, dawson_commission:(result.dawson_commission                 \n            //     - previousCommission + (editDownline.commission ? parseFloat(editDownline.commission) : previousCommission) \n            //     - previousReferral + (editDownline.new_referral_fee ? parseFloat(editDownline.new_referral_fee) : previousReferral) )});\n            setResult({...result, dawson_commission:(result.dawson_commission - previousCommission + (editDownline.commission ? parseFloat(editDownline.commission) : previousCommission) )});\n            break;\n        case 'khoo':\n            setResult({...result, khoo_commission:(result.dawson_commission - previousCommission + (editDownline.commission ? parseFloat(editDownline.commission) : previousCommission) )});\n            break;\n        case 'weiherr':\n            setResult({...result, weiherr_commission:(result.dawson_commission - previousCommission + (editDownline.commission ? parseFloat(editDownline.commission) : previousCommission) )});\n            break;\n        case 'xiaofei':\n            setResult({...result, xiaofei_commission:(result.dawson_commission - previousCommission + (editDownline.commission ? parseFloat(editDownline.commission) : previousCommission) )});\n            break;\n        case 'jasper':\n            setResult({...result, jasper_commission:(result.dawson_commission - previousCommission + (editDownline.commission ? parseFloat(editDownline.commission) : previousCommission) )});\n            break;                       \n        default:\n            break;\n    }\n    //update existed\n    if(editedDownline.find(x=>x._id === editDownline._id)?.commission){\n        editedDownline.find(x=>x._id === editDownline._id).commission = editDownline.commission;\n    }else{\n        setEditedDownline(current => [...current,editDownline]);\n    }\n    // if(editedDownline.find(x=>x._id === editDownline._id)?.new_referral_fee){\n    //     editedDownline.find(x=>x._id === editDownline._id).new_referral_fee = editDownline.new_referral_fee;\n    // }\n    //if new edited\n    // if(!editedDownline.find(x=>x._id === editDownline._id)){\n    //     setEditedDownline(current => [...current,editDownline]);\n    // }\n    handleClose();\n}\n\n  return (\n    <>\n        <Container style={{backgroundColor:\"#fff\"}} className=\"p-4 mb-3 rounded-lg tight-container\">\n            <Form>\n                <Row>\n                    <Col className=\"d-flex flex-column justify-content-evenly cycle-profit-upper\">\n                        <Form.Group className=\"d-flex flex-column cycle-profit-upper-inner justify-content-between\" controlId=\"calculatorForm.profit\">\n                            <Form.Label>\n                                <h5>Cycle Profit</h5>                       \n                            </Form.Label>\n                            <div style={{display:\"flex\", flexDirection:\"horizontal\",alignItems:\"center\"}}>\n                            <Form.Control type=\"number\" min=\"0\" step=\"0.01\" placeholder=\"Cycle Profit\" data-testid=\"cycleProfitInput\" style={{width:150, marginRight:8}} \n                                onChange={(event)=>{\n                                    if (!isNaN(parseFloat(event.target.value)))\n                                        setForm((prevState) => ({\n                                            ...prevState,\n                                            cycle_profit: event.target.value,\n                                            }));\n                                }}\n                                onKeyUp={(event)=>{\n                                    if (isNaN(parseFloat(event.target.value)))\n                                        setError(\"Please input valid number\");\n\n                                    else if (parseFloat(event.target.value) < 0)\n                                        setError(\"Minimum is 0\")\n                                    else setError(\"\");\n                                }}\n                                />\n                            USD\n                            </div>\n                            <p className=\"error-text\" data-testid=\"cycleProfitError\">{error}</p>                      \n                            <Button variant=\"primary\" data-testid=\"calculateBtn\" className=\"submit-btn rounded mb-3\" disabled={error!==\"\"} onClick={()=>onSubmit()}>\n                                Calculate\n                            </Button>\n                        </Form.Group>\n                    </Col>\n                    <Col className=\"d-flex flex-column justify-content-evenly cycle-profit-bottom\">\n                        <Form.Group className=\"d-flex flex-column\">\n                            <Form.Label className=\"mb-0\">\n                                <h6>Decimal places</h6>  \n                            </Form.Label>\n                            <div>\n                                <Form.Check\n                                    inline\n                                    label=\"2\"\n                                    name=\"decimal-place\"\n                                    type='radio'\n                                    id='2-decimal-place'\n                                    value={2}\n                                    defaultChecked={true}\n                                    onChange={(e)=>setDecimal(parseInt(e.target.value))}\n                                    data-testid=\"decimalPlaces2\"\n                                />\n                                <Form.Check\n                                    inline\n                                    label=\"3\"\n                                    name=\"decimal-place\"\n                                    type='radio'\n                                    id='3-decimal-place'\n                                    value={3}\n                                    onChange={(e)=>setDecimal(parseInt(e.target.value))}\n                                    data-testid=\"decimalPlaces3\"\n                                />  \n                                {}\n                            </div>\n                                                \n                        </Form.Group>\n                        <Form.Group className=\"d-flex flex-column\">\n                            <Form.Label className=\"mb-0\">\n                                <h6>Currency</h6>  \n                            </Form.Label>\n                            <div className=\"d-flex flex-row align-items-center position-relative\">\n                                <Form.Check\n                                    inline\n                                    label=\"USD\"\n                                    name=\"currency\"\n                                    type='radio'\n                                    id='usd'\n                                    value=\"usd\"\n                                    defaultChecked={true}\n                                    onChange={(e)=>{\n                                        setCurrency(\"usd\");\n                                        setRate(1);\n                                    }}\n                                    data-testid=\"currencyUSD\"\n                                />\n                                <Form.Check\n                                    inline\n                                    label=\"MYR\"\n                                    name=\"currency\"\n                                    type='radio'\n                                    id='myr'\n                                    value=\"myr\"\n                                    onChange={(e)=>setCurrency(\"myr\")}\n                                    data-testid=\"currencyMYR\"\n                                />\n                                {currency === \"myr\" && \n                                <Form.Control type=\"number\" min=\"0\" step=\"0.001\" placeholder=\"USD to MYR\" className=\"position-absolute\" style={{width:150, left:150}} \n                                    value={rate}\n                                    onChange={(event)=>{\n                                        if (!isNaN(parseFloat(event.target.value)))\n                                        setRate(parseFloat(event.target.value))}\n                                    }\n                                    data-testid=\"currencyMYRInput\"\n                                />                                 \n                                }\n\n                            </div>   \n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"commission\">\n                            <Form.Label className=\"mb-0\">\n                                <h6>Commission Payout in %</h6>\n                            </Form.Label>\n                            <InputGroup>\n                                <Form.Control type=\"number\" placeholder=\"Commission Payout in %\" style={{width:150, marginRight:8}}\n                                value={payout}\n                                data-testid=\"commissionPayoutInput\"\n                                onChange={(event)=>{\n                                    if (!isNaN(parseInt(event.target.value)))\n                                    setPayout(parseInt(event.target.value))}\n                                }/>\n                                <p>%</p>\n                            </InputGroup>\n                        </Form.Group>\n                    </Col>\n                </Row>                \n            </Form>            \n        </Container>\n        {isCalculated && \n        \n        <Container style={{backgroundColor:\"#fff\"}} className=\"p-4 rounded-lg tight-container\">\n            <Row className=\"overview\">\n                <h6 className=\"mx-1\">Overview</h6>\n                <Col sm={6}>\n                    <Table hover responsive=\"md\">\n                        <tbody>\n                        <tr>\n                            <td className=\"head\">\n                                <p>Main Acc Profit</p>\n                            </td>\n                            <td className=\"content\">\n                                <p data-testid=\"mainAccProfit\">{(result.main_acc_profit*(rate)).toFixed(decimal)}</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"head\">\n                                <p>Shared Acc Profit</p>\n                            </td>\n                            <td className=\"content\">\n                                <p>{(result.shared_acc_profit*(rate)).toFixed(decimal)}</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"head\">\n                                <p>Shared Acc Commission</p>\n                            </td>\n                            <td className=\"content\">\n                                <p>{(result.shared_acc_commission*(rate)).toFixed(decimal)}</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"head\">\n                                <p>Total</p>\n                            </td>\n                            <td className=\"content\">\n                                <p>{((result.main_acc_profit + result.shared_acc_commission + result.shared_acc_profit)*(rate)).toFixed(decimal)}</p>\n                            </td>\n                        </tr>\n                        </tbody>\n\n\n                    </Table>\n                </Col>\n\n                <Col sm={6}>\n                    <Table hover responsive=\"md\">\n                        <tbody>\n                            <tr>\n                                <td className=\"head\">\n                                    <p>Dawson's Commission</p>\n                                </td>\n                                <td className=\"content\">\n                                    <p>{(result.dawson_commission*(rate)).toFixed(decimal)}</p>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"head\">\n                                    <p>Khoo's Commission</p>\n                                </td>\n                                <td className=\"content\">\n                                    <p>{(result.khoo_commission*(rate)).toFixed(decimal)}</p>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"head\">\n                                    <p>Weiherr's Commission</p>\n                                </td>\n                                <td className=\"content\">\n                                    <p>{(result.weiherr_commission*(rate)).toFixed(decimal)}</p>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"head\">\n                                    <p>Xiaofei's Commission</p>\n                                </td>\n                                <td className=\"content\">\n                                    <p>{(result.xiaofei_commission*(rate)).toFixed(decimal)}</p>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"head\">\n                                    <p>Jasper's Commission</p>\n                                </td>\n                                <td className=\"content\">\n                                    <p>{(result.jasper_commission*(rate)).toFixed(decimal)}</p>\n                                </td>\n                            </tr>\n                        </tbody>\n\n\n                        </Table>\n                </Col>        \n            </Row>\n            \n            <Row>\n                <Col>\n                    <Dropdown className=\"mb-2\">\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            {referral === '' ? \"All\" : referral.charAt(0).toUpperCase() + referral.slice(1)}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"#/action-1\" onSelect={()=>setReferral('')}>All</Dropdown.Item>\n                            <Dropdown.Item href=\"#/action-2\" onSelect={()=>setReferral('dawson')}>Dawson</Dropdown.Item>\n                            <Dropdown.Item href=\"#/action-3\" onSelect={()=>setReferral('khoo')}>Khoo</Dropdown.Item>\n                            <Dropdown.Item href=\"#/action-4\" onSelect={()=>setReferral('weiherr')}>Weiherr</Dropdown.Item>\n                            <Dropdown.Item href=\"#/action-5\" onSelect={()=>setReferral('xiaofei')}>Xiaofei</Dropdown.Item>\n                            <Dropdown.Item href=\"#/action-6\" onSelect={()=>setReferral('jasper')}>Jasper</Dropdown.Item>\n                            <Dropdown.Item href=\"#/action-7\" onSelect={()=>setReferral('self')}>Self</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Col>\n            </Row>\n            {filteredDownlines ? \n            <Table hover responsive=\"md\" className=\"detail\" data-testid=\"downlinesTable\">\n            <thead>\n                <tr>\n                    <th className=\"tfxi-id\">\n                        ID\n                    </th>\n                    <th className=\"name\">\n                        Name\n                    </th>\n                    <th className=\"attachment\">\n                        Attachment\n                    </th>\n                    <th className=\"join-at\">\n                        Join At\n                    </th>\n                    <th className=\"commission\">\n                        Commission\n                    </th>\n                    <th className=\"referralFee\">\n                        Referral Fee\n                    </th>\n                    <th className=\"referral\">\n                        Referral\n                    </th>\n                    <th className=\"action\">\n                        Action\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                {filteredDownlines.map((downline, index)=>(\n                    <tr data-testid=\"downlinesRow\" key={index} className={downline.checked?`${downline.referral}`:`${downline.referral + \" \" + downline.checked}`}>\n                        <td className='tfxi_id'>\n                            {downline.tfxi_id}\n                        </td>\n                        <td className='name'>\n                            {downline.name}\n                        </td>\n                        <td className='attachment'>\n                            {downline.attachment*(rate)}\n                        </td>\n                        <td className='join-at'>\n                            {downline.join_date.split('T')[0]}\n                        </td>\n                        <td className='commission'>\n                            {editedDownline.find(x=>x._id === downline._id)? editedDownline.find(x=>x._id === downline._id).commission : (parseFloat(commission*downline.attachment/1000)*(rate)).toFixed(decimal)}\n                            <a className=\"edit\" onClick={()=>{handleShow();setEditDownline(downline)}}><EditIcon/></a>\n                        </td>\n                        <td className='referralFee'>\n                            {downline.referral !== \"others\" ? \n                            calculateYearDifference(downline.join_date) < 1 ? (parseFloat((50/12)*downline.attachment/1000)*(rate)).toFixed(decimal) : 0\n                            :\n                            calculateYearDifference(downline.join_date) < 1 ? (parseFloat((parseInt(downline.referral_fee)/12)*downline.attachment/1000)*(rate)).toFixed(decimal) : 0\n                            }\n                        </td>\n                        <td className='referral'>\n                            {downline.referral.charAt(0).toUpperCase() + downline.referral.slice(1)}\n                        </td>\n                        <td className='action'>\n                                <Form.Check \n                                    type=\"checkbox\"\n                                    id=\"default-checkbox\"\n                                    className=\"d-flex justify-content-center align-items-center\"\n                                    checked={downline.checked}\n                                    onChange={(e)=>handleChecked(e,downline)}\n                                />\n                        </td>\n                    </tr>\n\n                ))}\n\n            </tbody>\n            {editDownline && \n            <Modal show={show} onHide={handleClose}>\n            <Modal.Header>\n            <Modal.Title>Edit Info</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className='p-4'>\n            <Form>\n            <Form.Group className=\"mb-3\" controlId=\"tfxi_id\">\n                <Form.Label>TFXI ID</Form.Label>\n                <Form.Control type=\"number\" placeholder=\"TFXI ID\" value={editDownline.tfxi_id} readOnly/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Name\" value={editDownline.name} readOnly/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"attachment\">\n                <Form.Label>Attachment</Form.Label>\n                <Form.Control type=\"number\" placeholder=\"Attachment\" value={editDownline.attachment} readOnly/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"join_date\">\n                <Form.Label>Join At</Form.Label>\n                {/* <DateTimePicker value={new Date(editDownline.join_date)} readOnly/> */}\n                <Form.Control type=\"text\" placeholder=\"Join At\" value={new Date(editDownline.join_date)} readOnly/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"referral\">\n                <Form.Label>Referral</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Referral\" name=\"Referral\" value={editDownline.referral} readOnly/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"commission\">\n                <Form.Label>Commission</Form.Label>\n                <Form.Control type=\"number\" placeholder=\"Commission\" \n                defaultValue={editedDownline.find(x=>x._id === editDownline._id)?.commission? editedDownline.find(x=>x._id === editDownline._id).commission : (parseFloat(commission*editDownline.attachment/1000)*(rate)).toFixed(decimal)} \n                onChange={(e) => {\n                    setEditDownline({...editDownline, commission:parseFloat(e.target.value).toFixed(decimal)});\n                }}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"referral_fee\">\n                <Form.Label>Referral Fee</Form.Label>\n                <Form.Control type=\"number\" min={0} step={10} placeholder=\"Referral Fee\" readOnly\n                defaultValue={calculateYearDifference(editDownline.join_date) < 1 ? (parseFloat((parseInt(editDownline.referral_fee)/12)*editDownline.attachment/1000)*(rate)).toFixed(decimal) : 0} \n                // onChange={(e) => {\n                //     setEditDownline({...editDownline, new_referral_fee:parseFloat(e.target.value).toFixed(decimal)});\n                // }}\n                />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"fund\">\n                <Form.Label>Fund Invested</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Fund\" name=\"Fund\" value={editDownline.fund} readOnly/>      \n            </Form.Group>\n        </Form>\n            </Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleSubmit}>\n                Submit\n            </Button>\n            <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n            </Button>\n                </Modal.Footer>\n            </Modal>            \n            }\n\n        </Table>    \n        :\n        <Container className='p-5 d-flex justify-content-center align-items-center'>\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n        </Container>    \n        }\n            \n        </Container>\n        }\n    </>\n\n  );\n}\n\n\nexport default Calculator;","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Button, Col } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n// import { getDownline } from '../../actions/downline'\n// import { getCycle } from '../../actions/cycle'\nimport './styles.scss';\nimport Calculator from '../Calculator/Calculator';\nimport { useHistory } from 'react-router-dom';\n\nconst Home = () => {\n\n    const [currentId, setCurrentId] = useState(null);\n    const [currentCycleId, setCurrentCycleId] = useState(null);\n    const [currentModal, setCurrentModal] = useState(false);\n    const [currentTotalReturn, setCurrentTotalReturn] = useState(0);\n\n    const history = useHistory();\n\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n\n    const dispatch = useDispatch();\n\n    // useEffect(() => {\n    //     dispatch(getDownline());\n    // }, [currentId, dispatch]);\n\n    // useEffect(() => {\n    //     dispatch(getCycle());\n    // }, [currentCycleId, dispatch]);\n\n    return (\n        <>\n        {user ? \n        <Container>\n            <Calculator/>\n        </Container>  \n        :\n        history.push('/login')\n        }\n\n        </>\n\n\n    )\n}\n\nexport default Home;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = JSON.parse(localStorage.getItem('profile'));\n\nexport const authSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n\n    login : (state, action) => {\n        localStorage.setItem('profile', JSON.stringify({ ...action?.payload }));\n        return action?.payload ;\n    },\n    logout : (state, action) => {\n        localStorage.clear();\n        return null;\n    },\n\n  },\n});\n\nexport const { login,logout } = authSlice.actions;\n\n// export const getObject = (state: AppState) => state.object;\n\nexport default authSlice.reducer;","import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport * as authSlice from '../../store/slices/authSlice';\n\n\nimport './styles.scss';\n\nconst Login = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n\n    useEffect(() => {\n        const token = user?.token;\n        //JWT\n        setUser(JSON.parse(localStorage.getItem('profile')));\n    }, [location]);\n\n    const logout = () => {\n        // dispatch({ type: 'LOGOUT' });\n        dispatch(authSlice.logout())\n        history.push('/login');\n        setUser(null);\n    }\n\n    return (\n        <>\n            {user ? (\n                <Button href=\"/\" size=\"md\" className=\"logout-btn\" onClick={logout}> \n                    Logout\n                </Button>\n            )  \n            : (\n                <Button href=\"/login\" size=\"md\" className=\"login-btn\"> \n                    Login\n                </Button>\n            )}\n\n        </>\n    )\n}\n\nexport default Login;\n","import { Container, FormControl, FormLabel, Form, Row, Col, Button, InputGroup } from 'react-bootstrap';\nimport React, { useState } from 'react';\n// import { login } from '../../actions/login';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport './Auth.scss';\nimport * as authSlice from '../../store/slices/authSlice';\nimport { login } from '../../api';\n\n\nconst Auth = () => {\n\n    //useDispatch to set an action\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [loginData, setLoginData] = useState({id: '', password: ''});\n\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); //so that browser dont refresh\n        login(loginData)\n        .then(result =>{\n            if(result){\n                dispatch(authSlice.login(result));\n                history.push('/');\n            }\n        })\n        .catch(err=>{\n            console.log(err.message);\n        })\n        // dispatch(login(loginData,history));\n\n    }\n\n    const handleChange = (e) => {\n        e.preventDefault(); //so that browser dont refresh\n        setLoginData({...loginData,[e.target.name]:e.target.value});\n    }\n\n    // const handleShowPassword = () => {\n    //     setShowPassword((prevShowPassword) => !prevShowPassword)\n    // }\n\n    return (\n        <Container className=\"loginScreen\">\n            <Form className=\"authform\" onSubmit={handleSubmit}>\n                <Container className=\"authformContainer\">\n                    <Row className=\"inputRow\">\n                        <FormControl name=\"id\" size=\"md\" placeholder=\"User ID\" value={loginData.id} onChange={(e) => setLoginData({...loginData,id: e.target.value})}></FormControl>\n                    </Row>\n                    <Row className=\"inputRow\">\n                        <InputGroup>\n                            <FormControl name=\"password\" size=\"md\" placeholder=\"Password\" type={showPassword ? \"text\" : \"password\"} value={loginData.password} onChange={(e) => setLoginData({...loginData,password: e.target.value})}></FormControl>\n                            <Button onClick={()=>setShowPassword((prevShowPassword) => !prevShowPassword)}>{showPassword ? \"Hide\" : \"Show\"}</Button>\n                        </InputGroup>\n                    </Row>\n                    <Row className=\"submitRow\">\n                        <Button type=\"submit\" variant=\"primary\" size=\"md\" className=\"submit-btn\">Submit</Button>\n                    </Row>  \n                </Container>\n            </Form>\n        </Container>\n    )\n}\n\nexport default Auth;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport { Button, Col, Dropdown, Modal, Row, Form, Spinner, Container } from 'react-bootstrap';\nimport \"./Downlines.scss\";\nimport { useHistory } from 'react-router-dom';\nimport DateTimePicker from 'react-datetime-picker'\nimport { fetchDownlines, createNewDownline, updateDownline, deleteDownline } from '../../api';\nimport * as downlineSlice from '../../store/slices/downlineSlice';\n\n\nconst Downlines = () => {\n\n    const dispatch = useDispatch();\n    const downlines = useSelector(state => state.downline);\n    const [referral, setReferral] = useState('');\n    const [selectedData, setSelectedData] = useState({\n        name: '', tfxi_id: 0, attachment: 1000, referral: 'dawson', fund: 'GMC', join_date: new Date(), referral_fee: 50\n    });\n\n    const [show, setShow] = useState(false);\n    const [showConfirm, setShowConfirm] = useState(false);\n\n    const [action, setAction] = useState(\"\");\n\n    //error\n    const [error, setError] = useState(\"\");\n\n    const handleClose = () => {\n        setShow(false);\n        setSelectedData({name: '', tfxi_id: 0, attachment: 1000, referral: 'dawson', fund: 'GMC', join_date: new Date(), referral_fee: 50});\n      };\n    const handleShow = () => setShow(true);\n\n    const handleCloseConfirm = () => setShowConfirm(false);\n    const handleShowConfirm = () => setShowConfirm(true);\n\n    \n    useEffect(() => {\n      \n        fetchDownlines(referral)\n            .then(result =>{\n                // setDownlines(result);\n                dispatch(downlineSlice.getDownlines(result));\n            })\n            .catch(err=>{\n                console.log(err);\n            })\n    \n    }, [referral,dispatch])\n\n    const handleDelete = () => {\n        deleteDownline(selectedData)\n    }\n\n    const updateSelectedData = (downline) => {\n        setSelectedData(downline);\n        setAction(\"Edit\");\n        handleShow();\n    }\n\n    const addSelectedData = () => {\n        setAction(\"Add\");\n        handleShow();\n    }\n\n    //handle submit func\n    const handleSubmit = () => {\n\n        switch (action) {\n            case \"Edit\":\n                updateDownline(selectedData);\n                break;\n            case \"Add\":\n                createNewDownline(selectedData);\n                break;        \n            default:\n                break;\n        }\n        // window.location.reload();\n    }\n\n    const calculateTotal = () => {\n      var total = 0;\n      for (let index = 0; index < downlines.length; index++) {\n          total += parseFloat(downlines[index].attachment);\n          \n      }\n      return total;\n    }\n\n    return (\n    <Container style={{backgroundColor:\"#fff\"}} className=\"p-4 rounded-lg tight-container\">\n    <Row className=\"mb-2\">\n        <Col md={9} xs={4}>\n            <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    {referral === '' ? \"All\" : referral.charAt(0).toUpperCase() + referral.slice(1)}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\" onSelect={()=>setReferral('')}>All</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\" onSelect={()=>setReferral('dawson')}>Dawson</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-3\" onSelect={()=>setReferral('khoo')}>Khoo</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-4\" onSelect={()=>setReferral('weiherr')}>Weiherr</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-5\" onSelect={()=>setReferral('xiaofei')}>Xiaofei</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-6\" onSelect={()=>setReferral('jasper')}>Jasper</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-7\" onSelect={()=>setReferral('self')}>Self</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-8\" onSelect={()=>setReferral('others')}>Others</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n        </Col>\n        \n        <Col md={3} xs={8} className=\"d-flex justify-content-end\">\n            {downlines && \n                <p data-testid=\"totalUSD\" className='m-auto total_payout'>Total: USD {calculateTotal()}</p>\n            }\n            <Button onClick={()=>addSelectedData()} className=\"add-btn\">Add</Button>\n        </Col>\n    </Row>\n    {downlines ? \n       <Table hover responsive=\"md\" className=\"rounded-lg\" data-testid=\"downlinesTable\">\n       <thead>\n           <tr>\n               <th className=\"tfxi-id\">\n                   ID\n               </th>\n               <th className=\"name\">\n                   Name\n               </th>\n               <th className=\"attachment\">\n                   Attachment\n               </th>\n               <th className=\"join-at\">\n                   Join At\n               </th>\n               <th className=\"referral\">\n                   Referral\n               </th>\n               <th className=\"fund\">\n                   Fund Invested\n               </th>\n               <th className='action'>\n                   Action\n               </th>\n           </tr>\n       </thead>\n       <tbody>\n           {downlines.map((downline, index)=>(\n               <tr key={index} className={`${downline.referral}`} data-testid=\"downlinesRow\">\n                   <td className='tfxi_id'>\n                       {downline.tfxi_id} \n                   </td>\n                   <td className='name'>\n                       {downline.name}\n                   </td>\n                   <td className='attachment'>\n                       {downline.attachment}\n                   </td>\n                   <td className='join-at'>\n                       {downline.join_date.split('T')[0]}\n                   </td>\n                   <td className='referral'>\n                       {downline.referral.charAt(0).toUpperCase() + downline.referral.slice(1)}\n                   </td>\n                   <td className='fund'>\n                       {downline.fund}\n                   </td>\n                   <td className='action'>\n                       <div className='m-auto'>\n                        <button className='edit-icon' \n                            onClick={()=>{updateSelectedData(downline)}}>\n                            <EditIcon/>\n                        </button>\n                        <button className='trash-icon' onClick={(e)=>{setSelectedData(downline);handleShowConfirm();}}>\n                            <TrashIcon/>\n                        </button>\n                       </div>\n                   </td>\n               </tr>\n\n           ))}\n\n       </tbody>\n\n   </Table>    \n    :\n    <Container className='p-5 d-flex justify-content-center align-items-center'>\n        <Spinner animation=\"border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n    </Container>\n    }\n    <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>{action}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Form>\n        <Form.Group className=\"mb-3\" controlId=\"tfxi_id\">\n                <Form.Label>TFXI ID</Form.Label>\n                <Form.Control type=\"number\" placeholder=\"TFXI ID\" \n                value={selectedData.tfxi_id} \n                onChange={(e) => {\n                    if(!isNaN(parseInt(e.target.value)))\n                    setSelectedData({ ...selectedData, tfxi_id: parseInt(e.target.value)})\n                }}\n                onKeyUp={(event)=>{\n                    if (!/^\\d{7}$/.test(parseInt(event.target.value)))\n                        setError(\"Account ID must be a 7 digit number\");\n                    else setError(\"\");\n                }}/>\n                {error !== \"\" &&\n                    <p className=\"error-text\">{error}</p>                      \n                }\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Name\" value={selectedData.name} onChange={(e) => setSelectedData({ ...selectedData, name: e.target.value })}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"attachment\">\n                <Form.Label>Attachment</Form.Label>\n                <Form.Control type=\"number\" min={0} step={1000} placeholder=\"Attachment\" \n                    value={selectedData.attachment} \n                    onChange={(e) => setSelectedData({ ...selectedData, attachment: parseInt(e.target.value)})}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"join_date\">\n                <Form.Label>Join At</Form.Label>\n                <DateTimePicker onChange={(value) => setSelectedData({ ...selectedData, join_date: value })} value={new Date(selectedData.join_date)} required/>\n                {/* (e) => setSelectedData({ ...selectedData, join_date: e.target.value }) */}\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"referral\">\n                <Form.Label>Referral</Form.Label>\n                <Form.Control as=\"select\" placeholder=\"Referral\" name=\"Referral\" value={selectedData.referral} onChange={(e) => setSelectedData({ ...selectedData, referral: e.target.value })}>\n                <option value=\"dawson\">Dawson</option>\n                <option value=\"khoo\">Khoo</option>\n                <option value=\"weiherr\">Weiherr</option>\n                <option value=\"xiaofei\">Xiaofei</option>\n                <option value=\"jasper\">Jasper</option>\n                <option value=\"self\">Self</option>\n                <option value=\"others\">Others</option>\n                </Form.Control>          \n            </Form.Group>\n            {selectedData.referral === \"others\" && \n            <Form.Group className=\"mb-3\" controlId=\"referral_fee\">\n                <Form.Label>Referral Fee</Form.Label>\n                <Form.Control type=\"number\" min={0} step={10} placeholder=\"Referral Fee\" value={selectedData.referral_fee} onChange={(e) => setSelectedData({ ...selectedData, referral_fee: parseFloat(e.target.value)})}/>\n            </Form.Group>\n            }\n            <Form.Group className=\"mb-3\" controlId=\"fund\">\n                <Form.Label>Fund Invested</Form.Label>\n                <Form.Control as=\"select\" placeholder=\"Fund\" name=\"Fund\" value={selectedData.fund} onChange={(e) => setSelectedData({ ...selectedData, fund: e.target.value })}>\n                <option value=\"GMC\">GMC</option>\n                <option value=\"GMC PAMM\">GMC PAMM</option>\n                </Form.Control>         \n            </Form.Group>\n            <Button className=\"submit-btn\" onClick={handleSubmit}>Submit</Button>\n            <Button variant=\"secondary\" className=\"close-btn mx-2\" onClick={handleClose}>Close</Button>\n        </Form>\n        </Modal.Body>\n      </Modal>\n\n      <Modal show={showConfirm} onHide={handleCloseConfirm}>\n        <Modal.Body>\n            <p>Confirm to delete?</p>\n            <p>{selectedData.tfxi_id}</p>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleCloseConfirm}>Close</Button>\n            <Button variant=\"primary\" onClick={handleDelete}>Save changes</Button>\n        </Modal.Footer>\n        </Modal>\n    </Container>\n    );\n    \n}\n\nconst TrashIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n        <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n    </svg>\n  );\n}\n\nconst EditIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n        <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n        <path d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n    </svg>\n  );\n}\n\nexport default Downlines;","import React, { useState, useEffect } from 'react';\nimport { Button, Container, Row } from 'react-bootstrap';\n\nconst Information = () => {\n\n    return (\n        <Container>\n            <Row><h5>Selling Rules</h5></Row>\n            <Row className='mb-4'>\n                <ol className='ms-4'>\n                    <li>Shared Account</li>\n                    <li>自己</li>\n                    <li>卖的人的downline</li>\n                    <li>其他人的downline</li>\n                </ol>\n            </Row>\n            <Row><h5>GMC Marketing Plan</h5></Row>\n            <Row className='mb-4'>\n            <p>\n                <strong>Personal Performance Bonus :</strong><br/>\n                5 x USD 1000 = 10%<br/>\n                USD 10000 = 20%<br/>\n                USD 25000 = 30% (self invest USD 3000)<br/>\n                USD 40000 = 40% (self invest USD 3000)<br/>\n                Total 40% Payout.<br/>\n            </p>\n            <p>\n                <strong>Leadership Bonus :</strong><br/>\n                15% (1EM = 1level)<br/>\n                10% (2EM)<br/>\n                10% (2EM = 3level)<br/>\n                6%   (3EM)<br/>\n                3%   (3EM = 5level)<br/>\n                3%   (4EM)<br/>\n                2%   (4EM = 7level)<br/>\n                1%   (5EM)<br/>\n                1%   (5EM = 9level)<br/>\n                2%   (10EM = 10level)<br/>\n                Total 53% Payout.<br/>\n            </p>\n             <p>\n                <strong>International Pool Bonus :</strong><br/>\n                5 EM = 3% (self invest USD5000)<br/>\n                10 EM = 4% (self invest USD5000)<br/>\n                Total 7% Payout.<br/>\n            </p>\n            </Row>\n            <Row><h5>Bank Account</h5></Row>\n            <Row>\n            <p>\n                <strong>LIAN TAT XIAN</strong><br/>\n                151061595628<br/>\n                MAYBANK<br/>\n            </p>\n            <p>\n                <strong>KHOO JIAN HUI</strong><br/>\n                151061687923<br/>\n                MAYBANK<br/>\n            </p>\n            <p>\n                <strong>TENG WEI HERR</strong><br/>\n                151061745045<br/>\n                MAYBANK<br/>\n            </p>\n            <p>\n                <strong>CHAI ZEN FEI</strong><br/>\n                1491000738<br/>\n                UOB BANK<br/>\n            </p>\n            <p>\n                <strong>OH WEI SHUN</strong><br/>\n                6393951029<br/>\n                PUBLIC BANK<br/>\n            </p>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Information;","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Navbar, Nav, Modal, Button } from 'react-bootstrap';\nimport './styles.scss';\nimport Home from './components/Home/Home';\nimport Login from './components/Login/Login';\nimport Auth from './components/Auth/Auth';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Downlines from './components/Downlines/Downlines';\nimport Information from './components/Information/Information';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst App = () => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const user = useSelector(state => state.auth)\n\n    const parseJwt = (token) => {\n        try {\n          return JSON.parse(atob(token.split(\".\")[1]));\n        } catch (e) {\n          return null;\n        }\n      };\n\n    return (\n        <BrowserRouter>\n        {user &&\n        <>\n            {parseJwt(user.token).exp * 1000 < Date.now() && \n                <Modal show={true}>\n                <Modal.Header>\n                <Modal.Title>Login expired</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className='p-2 pb-4 text-center'>\n                    <Login/>\n                </Modal.Body>\n                </Modal>\n            }    \n        </>    \n        }\n          <Navbar collapseOnSelect expand=\"lg\" variant=\"light\" bg=\"light\">\n            <Container>\n                <Row className='justify-content-between w-100' >\n                    <Col className='d-flex align-items-center'>\n                        <Navbar.Brand href=\"#\">TFXI Calculator</Navbar.Brand>\n                    </Col>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Col sm={3}>\n                        <Navbar.Collapse className=\"me-auto justify-content-end\">\n                            {user && \n                            <>\n                                <Nav.Link className=\"me-4\" href=\"/calculator\">Calculator</Nav.Link>\n                                <Nav.Link className=\"me-4\" href=\"/downlines\">Downlines</Nav.Link>\n                                <Nav.Link className=\"me-4\" href=\"#\" onClick={handleShow}>Information</Nav.Link>  \n                            </>\n                            }\n                            <Login/>\n                        </Navbar.Collapse>\n                    </Col>\n                </Row>\n            </Container>\n          </Navbar>\n          <Container fluid className='p-4'>\n                <Switch>\n                    {user ? \n                    <>\n                        <Route path=\"/\" exact component={Home}/>\n                        <Route path=\"/login\" exact component={Auth}/>\n                        <Route path=\"/calculator\" exact component={Home}/>\n                        <Route path=\"/downlines\" exact component={Downlines}/>\n                    </>\n                    :\n                    <>\n                        <Route\n                            exact\n                            path=\"*\"\n                            render={() => (\n                                <Redirect to=\"/login\" /> \n                            )}\n                        />\n                        <Route path=\"/login\" exact component={Auth}/>\n                    </>                    \n                    }\n\n                </Switch>\n          </Container>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header>\n            <Modal.Title>Information</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className='p-4'>\n                <Information />\n            </Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n            </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </BrowserRouter>\n\n    );\n}\nexport default App;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport downlineReducer from \"../store/slices/downlineSlice\";\nimport authReducer from \"../store/slices/authSlice\";\n\nconst combinedReducer = combineReducers({\n    downline : downlineReducer,\n    auth: authReducer,\n});\n\n\nexport default configureStore({\n  reducer: combinedReducer,\n  devTools:true\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport store from './store';\nimport './styles.scss';\n\n// const store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));"],"sourceRoot":""}